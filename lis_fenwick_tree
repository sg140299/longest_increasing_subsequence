#include<bits/stdc++.h>
using namespace std;
struct fenwick{
    int n;
    vector<int> f;
    void init(int n){
        this->n=(n+2);
        f.resize(this->n,0);
    }
    void update(int x,int val){
        x+=1;
        while(x<n){
            f[x]=max(f[x],val);
            x+=(x&(-x));
        }
    }
    int query(int x){
        x+=1;
        int res=0;
        while(x){
            res=max(res,f[x]);
            x-=(x&(-x));
        }
        return res;
    }
};
int main(){
    int n;
    cin>>n;
    vector<pair<int,int> > v(n);
    for(int i=0;i<n;i++){
        cin>>v[i].first;
        v[i].second=i;
    }
    fenwick tree;
    tree.init(n);
    sort(v.begin(),v.end());
    vector<int> dp(n);
    for(int i=0;i<n;i++){
        int index=v[i].second;
        int value=v[i].first;
        dp[index]=tree.query(index-1)+1;
        tree.update(index,dp[index]);
    }
    cout<<(*(max_element(dp.begin(),dp.end())));
    return 0;
}
